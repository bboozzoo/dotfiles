# -*- mode: sh -*-

# emacs key bindings
bindkey -e
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

# most likely when accessed through emacs tramp
if [[ "$TERM" == "dumb" ]]
then
    unsetopt zle
    unsetopt prompt_cr
    unsetopt prompt_subst
    unfunction precmd
    unfunction preexec
    PS1='$ '
    return
fi

setopt auto_pushd \
    noclobber \
    share_history \
    extended_history \
    complete_aliases \
    extended_glob \
    list_types \
    no_list_beep \
    no_menu_complete \
    prompt_subst \
    histverify

# line editing
autoload -U select-word-style
select-word-style bash

# completion
autoload -Uz compinit
compinit
zstyle ':completion:*' list-colors "$LS_COLORS"
zstyle ':completion:*' completer _complete _correct _approximate
zstyle ':completion:*:correct:::' max-errors 2
zstyle ':completion:*:approximate:::' max-errors 2
zstyle ':completion:*' menu select

# VCS support
autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'
zstyle ':vcs_info:*' enable git cvs svn

# colors
autoload -U colors && colors

# prompt
autoload -U promptinit
promptinit
local user_prompt='%(!.%{$fg_bold[red]%}%n%{$reset_color%}.%n)'
local jobs_prompt='%1(j.(%j jobs) .)'
local dash_prompt="%{$fg_bold[white]%}<%{$reset_color%}%{$fg[white]%}<<%{$reset_color%}"
#local jhbuild_prompt=
if [[ "$UNDER_JHBUILD" == "true" ]]; then
    local jhbuild_prompt="%{$fg_bold[green]%}[jh]%{$reset_color%} "
fi
local machine_prompt="%m"
if [ "$$" = "1" ] || [ -n "$container" ] || [ -n "$CONTAINER_ID" ]; then
    # maybe in a container
    machine_prompt="%{$fg_bold[green]%}%m%{$reset_color%}"
fi
if [ "${SPREAD_VENV-}" = "1" ]; then
    # spread-venv?
    machine_prompt="%{$fg_bold[green]%}[spread]%{$reset_color%}"
fi
PROMPT='${user_prompt}@${machine_prompt}:%3~ ${jhbuild_prompt}${jobs_prompt}${vcs_info_msg_0_}'
RPS1='%(?..${dash_prompt} %{$fg_bold[red]%}%? â†µ%{$reset_color%})'

simpleps1() {
    PROMPT='%n:%3~$ '
}

# set terminal tile
function title() {
    # escape '%' chars in $1, make nonprintables visible
    local a=${(V)1//\%/\%\%}

    # Truncate command, and join lines.
    a=$(print -Pn "%40>...>$a" | tr -d "\n")

    # additional user specified title
    [[ -n "$TITLE" ]] && title="$TITLE - "

    case $TERM in
        screen*)
            print -Pn "\e]2;$title$a @ $2\a" # plain xterm title
            #print -Pn "\ek$a\e\\"      # screen title (in ^A")
            print -Pn "\e_$2   \e\\"   # screen location
            ;;
        xterm*|rxvt*)
            print -Pn "\e]2;$title$a @ $2\a" # plain xterm title
            ;;
    esac
}

precmd_title() {
    title "zsh" "%m: %3~"
    # vcs_info
}

precmd_vcs() {
    vcs_info
}

preexec_title() {
    title "$1" "%m: %3~"
}

# workaround precmd/preexec redefined by mc
precmd_functions=(precmd_title precmd_vcs)
preexec_functions=(preexec_title)

ppid=$(ps -p $$ -o ppid --no-headers | tr -d ' ')
if grep gnome-terminal /proc/$ppid/cmdline >&/dev/null; then
    # gnome terminal does not set TERM
    TERM=gnome-256color
elif [[ -n "$TMUX" ]]; then
    tmux_conf=~/.tmux.conf
    if ! grep -v '#' $tmux_conf | grep default-terminal >& /dev/null; then
        [[ "$TERM" != "screen-256color" ]] && TERM=screen-256color
    fi
else
    # do nothing if TERM is already set to something specific
    case "$TERM" in
        *rxvt*)
            ;;
        *256color*)
            ;;
        *)
            TERM=xterm-256color
            ;;
    esac
fi
export TERM

# aliases
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias ll='ls --color=auto -l'
alias lla='ls --color=auto -la'

EDITOR=vim
# if which emacsclient &> /dev/null ; then
#     # set aliases
#     alias vi="emacsclient -t -a ''"
#     alias vim="emacsclient -t -a ''"
#     alias rvim=/usr/bin/vim
#     # set EDITOR
#     EDITOR="emacsclient -t -a ''"
#     export EDITOR
# fi

if command -v helix &> /dev/null; then
    EDITOR=helix
fi

if command -v bat &> /dev/null; then
    alias cat=bat
fi

# for python
alias pylab='ipython --pylab'
alias ipythongui='ipython qtconsole'

alias dmesg='dmesg --human'
# editors & pagers
PAGER='less'

# mutt
alias mwork='mutt -F ~/.config-custom/mutt/work'
# locale
#LC_ALL=C

# exports
export PATH PAGER TERM LC_ALL EDITOR

# source zaw if exists
[[ -e ~/code/zaw/zaw.zsh ]] && source ~/code/zaw/zaw.zsh || true
# and fzf integration
_local_fzf_shell_dir=/usr/share/fzf
if [[ -d /usr/share/fzf/shell ]]; then
    # openSUSE?
    _local_fzf_shell_dir=/usr/share/fzf/shell
fi
[[ -e "$_local_fzf_shell_dir/key-bindings.zsh" ]] && source "$_local_fzf_shell_dir/key-bindings.zsh" || true
[[ -e "$_local_fzf_shell_dir/completion.zsh" ]] && source "$_local_fzf_shell_dir/completion.zsh" || true
